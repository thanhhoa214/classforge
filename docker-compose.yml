services:
  redis:
    image: redis:6-alpine
    networks:
      - classforge-network
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/conf:/conf
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/password
    restart: always
    networks:
      - classforge-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_HOST=redis
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - classforge-network
  
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: classforge-worker
    depends_on:
      - redis
      - backend
    environment:
      - REDIS_HOST=redis
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    networks:
      - classforge-network
    command: ["python", "worker.py"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - classforge-network

networks:
  classforge-network:
    driver: bridge 